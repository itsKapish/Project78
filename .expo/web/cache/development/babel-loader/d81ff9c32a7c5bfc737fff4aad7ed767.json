{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Kapish\\\\TURBOC3\\\\Whitehat Projects\\\\Project 78\\\\PRO-C78-Template-main\\\\screens\\\\StarMap.js\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { ImageBackgrounda } from \"react-native-web/dist/index\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { WebView } from 'react-native-webview';\nvar StarMapScreen = function (_Component) {\n  _inherits(StarMapScreen, _Component);\n  var _super = _createSuper(StarMapScreen);\n  function StarMapScreen() {\n    var _this;\n    _classCallCheck(this, StarMapScreen);\n    _this = _super.call(this);\n    _this.state = {\n      longitude: '',\n      latitude: ''\n    };\n    return _this;\n  }\n  _createClass(StarMapScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$state = this.state,\n        longitude = _this$state.longitude,\n        latitude = _this$state.latitude;\n      var path = \"https://virtualsky.lco.global/embed/index.html?longitude=\" + longitude + \"&latitude=\" + latitude + \"&constellations=true&constellationlabels=true&showstarlabels=true&gridlines_az=true&live=true&projection=stereo&showdate=false&showposition=false\";\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: \"#1a0023\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, React.createElement(SafeAreaView, {\n        style: styles.droidSafeArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 0.3,\n          marginTop: 20,\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }, \"Star Map\"), React.createElement(TextInput, {\n        style: styles.inputStyle,\n        placeholder: \"Enter your longitude\",\n        placeholderTextColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputStyle,\n        placeholder: \"Enter your latitude\",\n        placeholderTextColor: \"white\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            latitude: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      })), React.createElement(WebView, {\n        scalesPageToFit: true,\n        source: {\n          uri: path\n        },\n        style: {\n          marginTop: 20,\n          marginBottom: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n  return StarMapScreen;\n}(Component);\nexport { StarMapScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover'\n  },\n  titleText: {\n    fontSize: 35,\n    fontWeight: \"bold\",\n    color: \"white\",\n    justifyContent: \"center\",\n    alignContent: \"center\"\n  },\n  inputStyle: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 20,\n    marginTop: 20,\n    marginRight: 20,\n    marginLeft: 20,\n    textAlign: 'center',\n    color: 'white',\n    width: 200\n  }\n});","map":{"version":3,"names":["React","Component","ImageBackgrounda","WebView","StarMapScreen","state","longitude","latitude","path","flex","backgroundColor","styles","droidSafeArea","marginTop","alignItems","inputStyle","text","setState","uri","marginBottom","StyleSheet","create","container","justifyContent","Platform","OS","StatusBar","currentHeight","backgroundImage","resizeMode","titleText","fontSize","fontWeight","color","alignContent","height","borderColor","borderWidth","borderRadius","marginRight","marginLeft","textAlign","width"],"sources":["C:/Kapish/TURBOC3/Whitehat Projects/Project 78/PRO-C78-Template-main/screens/StarMap.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, TextInput, StyleSheet, Platform, StatusBar, SafeAreaView, ImageBackgrounda, ImageBackground } from 'react-native';\r\nimport { WebView } from 'react-native-webview';\r\n\r\nexport default class StarMapScreen extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            longitude: '',\r\n            latitude: ''\r\n        }\r\n\r\n    }\r\n    render() {\r\n        const { longitude, latitude } = this.state;\r\n        const path = `https://virtualsky.lco.global/embed/index.html?longitude=${longitude}&latitude=${latitude}&constellations=true&constellationlabels=true&showstarlabels=true&gridlines_az=true&live=true&projection=stereo&showdate=false&showposition=false`\r\n        return (\r\n            <View style={{ flex: 1, backgroundColor: \"#1a0023\" }}>\r\n                <SafeAreaView style={styles.droidSafeArea} />\r\n                <View style={{ flex: 0.3, marginTop: 20, alignItems: 'center' }}>\r\n                <Text \r\n                // style={styles.titleText}\r\n                // style={{styles.titleText}}\r\n                // style=styles.titleText\r\n                // style={titleText}\r\n                >Star Map</Text>\r\n\r\n                    <TextInput\r\n                        style={styles.inputStyle}\r\n                        placeholder=\"Enter your longitude\"\r\n                        placeholderTextColor=\"white\"\r\n\r\n                        // onChangeText={(text) => {\r\n                        //     this.State({\r\n                        //         longitude: text\r\n                        //     })\r\n                        // }}\r\n\r\n                        // onChangeText={(text) => {\r\n                        //     this.setState(\r\n                        //         longitude: text\r\n                        //     )\r\n                        // }}\r\n\r\n                        // onChangeText={() => {\r\n                        //     this.setState({\r\n                        //         longitude: \r\n                        //     })\r\n                        // }}\r\n\r\n                        // onChangeText={(text) => {\r\n                        //     this.setState({\r\n                        //         longitude: text\r\n                        //     })\r\n                        // }}\r\n                    />\r\n\r\n                    <TextInput\r\n                        style={styles.inputStyle}\r\n                        placeholder=\"Enter your latitude\"\r\n                        placeholderTextColor=\"white\"\r\n                        onChangeText={(text) => {\r\n                            this.setState({\r\n                                latitude: text\r\n                            })\r\n                        }}\r\n                    />\r\n                </View>\r\n                <WebView\r\n                    scalesPageToFit={true}\r\n                    source={{ uri: path }}\r\n                    style={{ marginTop: 20, marginBottom: 20, }}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    droidSafeArea: {\r\n        marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\r\n    },\r\n    backgroundImage: {\r\n        flex: 1,\r\n        resizeMode: 'cover',\r\n    },\r\n    titleText: {\r\n        fontSize: 35,\r\n        fontWeight: \"bold\",\r\n        color: \"white\",\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n    },\r\n    inputStyle: {\r\n        height: 40,\r\n        borderColor: 'gray',\r\n        borderWidth: 1,\r\n        borderRadius: 20,\r\n        marginTop: 20,\r\n        marginRight: 20,\r\n        marginLeft: 20,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        width: 200\r\n    }\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}